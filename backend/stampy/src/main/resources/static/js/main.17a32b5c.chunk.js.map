{"version":3,"sources":["logo.svg","components/placeholder.tsx","components/user_profile/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Placeholder","className","src","logo","alt","href","target","rel","UserProfile","useState","getProfile","profile","setProfile","id","posts","i","push","pic_url","stamps","user_info","name","text","console","log","useEffect","map","post","App","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,iC,OCwB1BA,MArBf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,+CADT,0BAGA,mBACIH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,+B,OCgDDC,MAxDf,WAAwB,IAAD,EACWC,mBAAsBC,KADjC,mBACZC,EADY,KACHC,EADG,KAKnB,SAASF,EAAWG,GAEhB,IADA,IAAIC,EAAoB,GACfC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAME,KAAK,CACPH,GAAIE,EACJE,QAAS,oCAAsCF,EAC/CG,OAAQ,KAGhB,IAAIP,EAAuB,CACvBQ,UAAW,CACPN,GAAIA,GAAU,OACdO,KAAMP,EAAK,gBAAkB,SAC7BQ,KAAMR,EAAK,eAAiB,GAC5BI,QAASJ,EACH,wCACA,yDAEVC,SAIJ,OAFAQ,QAAQC,IAAIZ,GAELA,EAEX,OA3BAa,qBAAU,WACNZ,EAAWF,EAAW,MACvB,IA0BC,sBAAKT,UAAU,GAAf,UACI,gCACI,sBAAKA,UAAU,iBAAf,UACI,qBACIC,IAAKS,EAAQQ,UAAUF,QACvBb,IAAI,YACJH,UAAU,KAEd,+BAAOU,EAAQQ,UAAUC,UAE7B,8BACI,4BAAIT,EAAQQ,UAAUE,YAG9B,qBAAKpB,UAAU,iBAAf,SACMU,EAAwBG,MAAMW,KAAI,SAACC,GAAD,OAChC,mBAAGrB,KAAM,SAAWqB,EAAKb,GAAzB,SACI,qBAAKX,IAAKwB,EAAKT,QAASb,IAAI,YAAYH,UAAU,gBC7B3D0B,MAff,WACI,OACI,eAAC,IAAD,WACI,gCACI,cAAC,IAAD,CAAMC,GAAG,eAAT,yBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,aCDjCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17a32b5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport logo from \"../logo.svg\";\r\n\r\nfunction Placeholder() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.tsx</code> and save to reload.\r\n                </p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Learn React\r\n                </a>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Placeholder;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ProfileType, PostType } from \"../../ts_types/types\";\r\n\r\nfunction UserProfile() {\r\n    const [profile, setProfile] = useState<ProfileType>(getProfile());\r\n    useEffect(() => {\r\n        setProfile(getProfile(5));\r\n    }, []);\r\n    function getProfile(id?: number | string) {\r\n        let posts: PostType[] = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            posts.push({\r\n                id: i,\r\n                pic_url: \"https://picsum.photos/100?random=\" + i,\r\n                stamps: [],\r\n            });\r\n        }\r\n        let profile: ProfileType = {\r\n            user_info: {\r\n                id: id ? id : \"none\",\r\n                name: id ? \"person's name\" : \"no one\",\r\n                text: id ? \"profile info\" : \"\",\r\n                pic_url: id\r\n                    ? \"https://picsum.photos/100?random=1000\"\r\n                    : \"https://picsum.photos/id/870/100/100?grayscale&blur=2\",\r\n            },\r\n            posts,\r\n        };\r\n        console.log(profile);\r\n\r\n        return profile;\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <div>\r\n                <div className=\"flex flex-wrap\">\r\n                    <img\r\n                        src={profile.user_info.pic_url}\r\n                        alt=\"thumbnail\"\r\n                        className=\"\"\r\n                    />\r\n                    <span>{profile.user_info.name}</span>\r\n                </div>\r\n                <div>\r\n                    <p>{profile.user_info.text}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap\">\r\n                {(profile as ProfileType).posts.map((post) => (\r\n                    <a href={\"/post/\" + post.id}>\r\n                        <img src={post.pic_url} alt=\"thumbnail\" className=\"\" />\r\n                    </a>\r\n                    // <p>{url}</p>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\nimport Placeholder from \"./components/placeholder\";\r\nimport UserProfile from \"./components/user_profile\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <nav>\r\n                <Link to=\"/placeholder\">placeholder</Link>\r\n                <Link to=\"/profile\">profile</Link>\r\n            </nav>\r\n            <Routes>\r\n                <Route path=\"/placeholder\" element={<Placeholder />}></Route>\r\n                <Route path=\"/profile\" element={<UserProfile />}></Route>\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}